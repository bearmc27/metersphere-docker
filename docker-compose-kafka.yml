version: "3.8"

services:
  zookeeper:
    image: zookeeper:3.8.0
    container_name: ms-zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    volumes:
      - ms-zookeeper-data:/bitnami
    networks:
      - ms-network
    restart: always
    healthcheck:
      test: ["CMD", "zkServer.sh", "version"]
      interval: 10s
      timeout: 10s
      retries: 10
  kafka:
    image: bitnami/kafka:2.8.1
    container_name: ms-kafka
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_LISTENERS: INTERNAL://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka:9092
      KAFKA_CFG_LOG_RETENTION_HOURS: 64
      KAFKA_CFG_MAX_REQUEST_SIZE: 52428800
      KAFKA_CFG_MESSAGE_MAX_BYTES: 52428800
      KAFKA_CFG_REPLICA_FETCH_MAX_BYTES: 52428800
      KAFKA_CFG_FETCH_MESSAGE_MAX_BYTES: 52428800
      KAFKA_CFG_PARTITION_FETCH_BYTES: 52428800
      FORMAT_MESSAGES_PATTERN_DISABLE_LOOKUPS: 'true'
    volumes:
      - ms-kafka-data:/bitnami
    depends_on:
      - zookeeper
    networks:
      - ms-network
    restart: always
    healthcheck:
      test: ["CMD", "bash", "-c", "< /dev/tcp/localhost/9092"]
      interval: 10s
      timeout: 10s
      retries: 10
  ms-data-streaming:
    depends_on:
      kafka:
        condition: service_healthy

volumes:
  ms-zookeeper-data:
  ms-kafka-data:
